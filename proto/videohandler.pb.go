// Code generated by protoc-gen-go. DO NOT EDIT.
// source: videohandler.proto

package videohandler

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Status of a request
type Status int32

const (
	Status_FAILURE Status = 0
	Status_SUCCESS Status = 1
)

var Status_name = map[int32]string{
	0: "FAILURE",
	1: "SUCCESS",
}

var Status_value = map[string]int32{
	"FAILURE": 0,
	"SUCCESS": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f718a8b2c1ea4061, []int{0}
}

// Types of videos
type VideoType int32

const (
	VideoType_UNENCODED VideoType = 0
	VideoType_ENCODING  VideoType = 1
	VideoType_ENCODED   VideoType = 2
)

var VideoType_name = map[int32]string{
	0: "UNENCODED",
	1: "ENCODING",
	2: "ENCODED",
}

var VideoType_value = map[string]int32{
	"UNENCODED": 0,
	"ENCODING":  1,
	"ENCODED":   2,
}

func (x VideoType) String() string {
	return proto.EnumName(VideoType_name, int32(x))
}

func (VideoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f718a8b2c1ea4061, []int{1}
}

// Video
type Video struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Time                 uint32   `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Size                 uint64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Video) Reset()         { *m = Video{} }
func (m *Video) String() string { return proto.CompactTextString(m) }
func (*Video) ProtoMessage()    {}
func (*Video) Descriptor() ([]byte, []int) {
	return fileDescriptor_f718a8b2c1ea4061, []int{0}
}

func (m *Video) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Video.Unmarshal(m, b)
}
func (m *Video) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Video.Marshal(b, m, deterministic)
}
func (m *Video) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Video.Merge(m, src)
}
func (m *Video) XXX_Size() int {
	return xxx_messageInfo_Video.Size(m)
}
func (m *Video) XXX_DiscardUnknown() {
	xxx_messageInfo_Video.DiscardUnknown(m)
}

var xxx_messageInfo_Video proto.InternalMessageInfo

func (m *Video) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Video) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Video) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

// Currently encoding video
type EncodingVideo struct {
	Video                *Video   `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	Tprog                uint32   `protobuf:"varint,2,opt,name=tprog,proto3" json:"tprog,omitempty"`
	Eprog                uint64   `protobuf:"varint,3,opt,name=eprog,proto3" json:"eprog,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncodingVideo) Reset()         { *m = EncodingVideo{} }
func (m *EncodingVideo) String() string { return proto.CompactTextString(m) }
func (*EncodingVideo) ProtoMessage()    {}
func (*EncodingVideo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f718a8b2c1ea4061, []int{1}
}

func (m *EncodingVideo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncodingVideo.Unmarshal(m, b)
}
func (m *EncodingVideo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncodingVideo.Marshal(b, m, deterministic)
}
func (m *EncodingVideo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncodingVideo.Merge(m, src)
}
func (m *EncodingVideo) XXX_Size() int {
	return xxx_messageInfo_EncodingVideo.Size(m)
}
func (m *EncodingVideo) XXX_DiscardUnknown() {
	xxx_messageInfo_EncodingVideo.DiscardUnknown(m)
}

var xxx_messageInfo_EncodingVideo proto.InternalMessageInfo

func (m *EncodingVideo) GetVideo() *Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *EncodingVideo) GetTprog() uint32 {
	if m != nil {
		return m.Tprog
	}
	return 0
}

func (m *EncodingVideo) GetEprog() uint64 {
	if m != nil {
		return m.Eprog
	}
	return 0
}

// Queued video for encoding
type QueuedVideo struct {
	Video                *Video   `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	Priority             uint32   `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueuedVideo) Reset()         { *m = QueuedVideo{} }
func (m *QueuedVideo) String() string { return proto.CompactTextString(m) }
func (*QueuedVideo) ProtoMessage()    {}
func (*QueuedVideo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f718a8b2c1ea4061, []int{2}
}

func (m *QueuedVideo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueuedVideo.Unmarshal(m, b)
}
func (m *QueuedVideo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueuedVideo.Marshal(b, m, deterministic)
}
func (m *QueuedVideo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueuedVideo.Merge(m, src)
}
func (m *QueuedVideo) XXX_Size() int {
	return xxx_messageInfo_QueuedVideo.Size(m)
}
func (m *QueuedVideo) XXX_DiscardUnknown() {
	xxx_messageInfo_QueuedVideo.DiscardUnknown(m)
}

var xxx_messageInfo_QueuedVideo proto.InternalMessageInfo

func (m *QueuedVideo) GetVideo() *Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *QueuedVideo) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

// Requests information on videos
type VideoRequest struct {
	Type                 VideoType `protobuf:"varint,1,opt,name=type,proto3,enum=VideoType" json:"type,omitempty"`
	Query                string    `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *VideoRequest) Reset()         { *m = VideoRequest{} }
func (m *VideoRequest) String() string { return proto.CompactTextString(m) }
func (*VideoRequest) ProtoMessage()    {}
func (*VideoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f718a8b2c1ea4061, []int{3}
}

func (m *VideoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoRequest.Unmarshal(m, b)
}
func (m *VideoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoRequest.Marshal(b, m, deterministic)
}
func (m *VideoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoRequest.Merge(m, src)
}
func (m *VideoRequest) XXX_Size() int {
	return xxx_messageInfo_VideoRequest.Size(m)
}
func (m *VideoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VideoRequest proto.InternalMessageInfo

func (m *VideoRequest) GetType() VideoType {
	if m != nil {
		return m.Type
	}
	return VideoType_UNENCODED
}

func (m *VideoRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

// Responds with information on many videos
type VideoResponse struct {
	Response             *StatusResponse  `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Queued               []*QueuedVideo   `protobuf:"bytes,2,rep,name=queued,proto3" json:"queued,omitempty"`
	Encoding             []*EncodingVideo `protobuf:"bytes,3,rep,name=encoding,proto3" json:"encoding,omitempty"`
	Encoded              []*Video         `protobuf:"bytes,4,rep,name=encoded,proto3" json:"encoded,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *VideoResponse) Reset()         { *m = VideoResponse{} }
func (m *VideoResponse) String() string { return proto.CompactTextString(m) }
func (*VideoResponse) ProtoMessage()    {}
func (*VideoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f718a8b2c1ea4061, []int{4}
}

func (m *VideoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoResponse.Unmarshal(m, b)
}
func (m *VideoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoResponse.Marshal(b, m, deterministic)
}
func (m *VideoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoResponse.Merge(m, src)
}
func (m *VideoResponse) XXX_Size() int {
	return xxx_messageInfo_VideoResponse.Size(m)
}
func (m *VideoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VideoResponse proto.InternalMessageInfo

func (m *VideoResponse) GetResponse() *StatusResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *VideoResponse) GetQueued() []*QueuedVideo {
	if m != nil {
		return m.Queued
	}
	return nil
}

func (m *VideoResponse) GetEncoding() []*EncodingVideo {
	if m != nil {
		return m.Encoding
	}
	return nil
}

func (m *VideoResponse) GetEncoded() []*Video {
	if m != nil {
		return m.Encoded
	}
	return nil
}

//
// Cancels an encoding video, sending
// it back to the encoding queue
type CancelEncodingRequest struct {
	Video                *EncodingVideo `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	Priority             uint32         `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CancelEncodingRequest) Reset()         { *m = CancelEncodingRequest{} }
func (m *CancelEncodingRequest) String() string { return proto.CompactTextString(m) }
func (*CancelEncodingRequest) ProtoMessage()    {}
func (*CancelEncodingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f718a8b2c1ea4061, []int{5}
}

func (m *CancelEncodingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelEncodingRequest.Unmarshal(m, b)
}
func (m *CancelEncodingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelEncodingRequest.Marshal(b, m, deterministic)
}
func (m *CancelEncodingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelEncodingRequest.Merge(m, src)
}
func (m *CancelEncodingRequest) XXX_Size() int {
	return xxx_messageInfo_CancelEncodingRequest.Size(m)
}
func (m *CancelEncodingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelEncodingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelEncodingRequest proto.InternalMessageInfo

func (m *CancelEncodingRequest) GetVideo() *EncodingVideo {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *CancelEncodingRequest) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

//
// Updating the priority associated
// with a video in the encoding queue
type UpdatePriorityRequest struct {
	Video                *QueuedVideo `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	Priority             uint32       `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdatePriorityRequest) Reset()         { *m = UpdatePriorityRequest{} }
func (m *UpdatePriorityRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePriorityRequest) ProtoMessage()    {}
func (*UpdatePriorityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f718a8b2c1ea4061, []int{6}
}

func (m *UpdatePriorityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePriorityRequest.Unmarshal(m, b)
}
func (m *UpdatePriorityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePriorityRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePriorityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePriorityRequest.Merge(m, src)
}
func (m *UpdatePriorityRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePriorityRequest.Size(m)
}
func (m *UpdatePriorityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePriorityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePriorityRequest proto.InternalMessageInfo

func (m *UpdatePriorityRequest) GetVideo() *QueuedVideo {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *UpdatePriorityRequest) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

//
// Status response, containing
// an error if anything went wrong
type StatusResponse struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f718a8b2c1ea4061, []int{7}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_FAILURE
}

func (m *StatusResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterEnum("Status", Status_name, Status_value)
	proto.RegisterEnum("VideoType", VideoType_name, VideoType_value)
	proto.RegisterType((*Video)(nil), "Video")
	proto.RegisterType((*EncodingVideo)(nil), "EncodingVideo")
	proto.RegisterType((*QueuedVideo)(nil), "QueuedVideo")
	proto.RegisterType((*VideoRequest)(nil), "VideoRequest")
	proto.RegisterType((*VideoResponse)(nil), "VideoResponse")
	proto.RegisterType((*CancelEncodingRequest)(nil), "CancelEncodingRequest")
	proto.RegisterType((*UpdatePriorityRequest)(nil), "UpdatePriorityRequest")
	proto.RegisterType((*StatusResponse)(nil), "StatusResponse")
}

func init() { proto.RegisterFile("videohandler.proto", fileDescriptor_f718a8b2c1ea4061) }

var fileDescriptor_f718a8b2c1ea4061 = []byte{
	// 483 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0xdd, 0xf4, 0x23, 0x6d, 0xa6, 0x4d, 0xa8, 0x2c, 0x76, 0x15, 0x55, 0x08, 0xa2, 0x68, 0x0f,
	0x55, 0x41, 0x39, 0x14, 0x71, 0xe2, 0x84, 0xda, 0x50, 0x56, 0x42, 0x05, 0x5c, 0x0a, 0xda, 0x63,
	0xd9, 0x8c, 0x96, 0x48, 0x25, 0x49, 0x1d, 0x07, 0xa9, 0xfc, 0x2a, 0x4e, 0xfc, 0x3e, 0x94, 0xb1,
	0x5d, 0x6d, 0x56, 0x3d, 0xf4, 0x36, 0xef, 0x79, 0xfc, 0xc6, 0xf3, 0x66, 0x0c, 0xec, 0x77, 0x9a,
	0x60, 0xfe, 0x73, 0x9b, 0x25, 0x3b, 0x14, 0x51, 0x21, 0x72, 0x99, 0x87, 0x31, 0x74, 0xbf, 0xd5,
	0x2c, 0x7b, 0x0a, 0x5d, 0x99, 0xca, 0x1d, 0xfa, 0x56, 0x60, 0x4d, 0x1c, 0xae, 0x00, 0x63, 0xd0,
	0x91, 0xe9, 0x2f, 0xf4, 0x5b, 0x81, 0x35, 0x71, 0x39, 0xc5, 0x35, 0x57, 0xa6, 0x7f, 0xd0, 0x6f,
	0x07, 0xd6, 0xa4, 0xc3, 0x29, 0x0e, 0x6f, 0xc1, 0x8d, 0xb3, 0xbb, 0x3c, 0x49, 0xb3, 0x7b, 0x25,
	0xf7, 0x0c, 0xba, 0x54, 0x8d, 0xe4, 0x06, 0x33, 0x3b, 0x22, 0x9a, 0x2b, 0x92, 0x8a, 0x15, 0x22,
	0xbf, 0xd7, 0xba, 0x0a, 0xd4, 0x2c, 0x12, 0xab, 0x94, 0x15, 0x08, 0x97, 0x30, 0xf8, 0x52, 0x61,
	0x85, 0xc9, 0x39, 0xc2, 0x63, 0xe8, 0x17, 0x22, 0xcd, 0x45, 0x2a, 0x0f, 0x5a, 0xfb, 0x88, 0xc3,
	0x05, 0x0c, 0x55, 0x2e, 0xee, 0x2b, 0x2c, 0x25, 0x7b, 0x0e, 0x1d, 0x79, 0x28, 0x54, 0xc3, 0xde,
	0x0c, 0x94, 0xd0, 0xd7, 0x43, 0x81, 0x9c, 0xf8, 0xfa, 0x39, 0xfb, 0x0a, 0x85, 0x12, 0x72, 0xb8,
	0x02, 0xe1, 0x5f, 0x0b, 0x5c, 0x2d, 0x53, 0x16, 0x79, 0x56, 0x22, 0x7b, 0x09, 0x7d, 0xa1, 0x63,
	0xfd, 0xa8, 0x27, 0xd1, 0x5a, 0x6e, 0x65, 0x55, 0x9a, 0x14, 0x7e, 0x4c, 0x60, 0xd7, 0x60, 0xef,
	0xa9, 0x1b, 0xbf, 0x15, 0xb4, 0x27, 0x83, 0xd9, 0x30, 0x7a, 0xd0, 0x1c, 0xd7, 0x67, 0x6c, 0x0a,
	0x7d, 0xd4, 0x76, 0xfa, 0x6d, 0xca, 0xf3, 0xa2, 0x86, 0xbf, 0xfc, 0x78, 0xce, 0x02, 0xe8, 0x51,
	0x8c, 0x89, 0xdf, 0xa1, 0x54, 0x63, 0x89, 0xa1, 0xc3, 0x5b, 0xb8, 0x9c, 0x6f, 0xb3, 0x3b, 0xdc,
	0x19, 0x09, 0xe3, 0xc0, 0x75, 0xd3, 0xcb, 0xc7, 0x35, 0xce, 0xf0, 0xf4, 0x3b, 0x5c, 0x6e, 0x8a,
	0x64, 0x2b, 0xf1, 0xb3, 0x66, 0x8c, 0x74, 0xd8, 0x94, 0x6e, 0xb6, 0x79, 0x86, 0xf0, 0x12, 0xbc,
	0xa6, 0x87, 0xec, 0x05, 0xd8, 0x25, 0x31, 0x7a, 0x60, 0x3d, 0x63, 0xb2, 0xa6, 0x69, 0x7d, 0x84,
	0xc8, 0x85, 0x99, 0x17, 0x81, 0x69, 0x08, 0xb6, 0xca, 0x63, 0x03, 0xe8, 0xbd, 0x7f, 0x77, 0xf3,
	0x71, 0xc3, 0xe3, 0xd1, 0x45, 0x0d, 0xd6, 0x9b, 0xf9, 0x3c, 0x5e, 0xaf, 0x47, 0xd6, 0xf4, 0x0d,
	0x38, 0xc7, 0xe1, 0x33, 0x17, 0x9c, 0xcd, 0x2a, 0x5e, 0xcd, 0x3f, 0x2d, 0xe2, 0xc5, 0xe8, 0x82,
	0x0d, 0xa1, 0x4f, 0xe0, 0x66, 0xb5, 0x1c, 0x59, 0xf5, 0x35, 0x73, 0xd4, 0x9a, 0xfd, 0xb3, 0xf4,
	0x46, 0x7d, 0x50, 0x5f, 0x8a, 0xbd, 0x02, 0x67, 0x89, 0x92, 0xa8, 0x92, 0xb9, 0xd1, 0xc3, 0x6d,
	0x1b, 0x7b, 0x51, 0x63, 0x6b, 0xc2, 0x0b, 0xf6, 0x16, 0xbc, 0xe6, 0x58, 0xd8, 0x55, 0x74, 0x72,
	0x4e, 0xe3, 0xc7, 0xfb, 0xa4, 0x2e, 0x37, 0x8d, 0x67, 0x57, 0xd1, 0xc9, 0x49, 0x9c, 0xb8, 0xfc,
	0xc3, 0xa6, 0xbf, 0xff, 0xfa, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x68, 0x12, 0xe6, 0x11,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VideoHandlerClient is the client API for VideoHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VideoHandlerClient interface {
	//
	// Gets information on many videos
	// based on the request
	GetVideos(ctx context.Context, in *VideoRequest, opts ...grpc.CallOption) (*VideoResponse, error)
	//
	// Cancels an encoding video, sending
	// it back to the encoding queue
	CancelEncoding(ctx context.Context, in *CancelEncodingRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	//
	// Updating the priority associated
	// with a video in the encoding queue
	UpdatePriority(ctx context.Context, in *UpdatePriorityRequest, opts ...grpc.CallOption) (*StatusResponse, error)
}

type videoHandlerClient struct {
	cc *grpc.ClientConn
}

func NewVideoHandlerClient(cc *grpc.ClientConn) VideoHandlerClient {
	return &videoHandlerClient{cc}
}

func (c *videoHandlerClient) GetVideos(ctx context.Context, in *VideoRequest, opts ...grpc.CallOption) (*VideoResponse, error) {
	out := new(VideoResponse)
	err := c.cc.Invoke(ctx, "/VideoHandler/GetVideos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoHandlerClient) CancelEncoding(ctx context.Context, in *CancelEncodingRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/VideoHandler/CancelEncoding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoHandlerClient) UpdatePriority(ctx context.Context, in *UpdatePriorityRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/VideoHandler/UpdatePriority", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VideoHandlerServer is the server API for VideoHandler service.
type VideoHandlerServer interface {
	//
	// Gets information on many videos
	// based on the request
	GetVideos(context.Context, *VideoRequest) (*VideoResponse, error)
	//
	// Cancels an encoding video, sending
	// it back to the encoding queue
	CancelEncoding(context.Context, *CancelEncodingRequest) (*StatusResponse, error)
	//
	// Updating the priority associated
	// with a video in the encoding queue
	UpdatePriority(context.Context, *UpdatePriorityRequest) (*StatusResponse, error)
}

// UnimplementedVideoHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedVideoHandlerServer struct {
}

func (*UnimplementedVideoHandlerServer) GetVideos(ctx context.Context, req *VideoRequest) (*VideoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVideos not implemented")
}
func (*UnimplementedVideoHandlerServer) CancelEncoding(ctx context.Context, req *CancelEncodingRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelEncoding not implemented")
}
func (*UnimplementedVideoHandlerServer) UpdatePriority(ctx context.Context, req *UpdatePriorityRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePriority not implemented")
}

func RegisterVideoHandlerServer(s *grpc.Server, srv VideoHandlerServer) {
	s.RegisterService(&_VideoHandler_serviceDesc, srv)
}

func _VideoHandler_GetVideos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoHandlerServer).GetVideos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/VideoHandler/GetVideos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoHandlerServer).GetVideos(ctx, req.(*VideoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoHandler_CancelEncoding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelEncodingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoHandlerServer).CancelEncoding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/VideoHandler/CancelEncoding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoHandlerServer).CancelEncoding(ctx, req.(*CancelEncodingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoHandler_UpdatePriority_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePriorityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoHandlerServer).UpdatePriority(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/VideoHandler/UpdatePriority",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoHandlerServer).UpdatePriority(ctx, req.(*UpdatePriorityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VideoHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "VideoHandler",
	HandlerType: (*VideoHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVideos",
			Handler:    _VideoHandler_GetVideos_Handler,
		},
		{
			MethodName: "CancelEncoding",
			Handler:    _VideoHandler_CancelEncoding_Handler,
		},
		{
			MethodName: "UpdatePriority",
			Handler:    _VideoHandler_UpdatePriority_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "videohandler.proto",
}
